<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Technology on Everything is Gray</title><link>https://everythingisgray.com/categories/technology/</link><description>Recent content in Technology on Everything is Gray</description><generator>Hugo</generator><language>en-us</language><copyright>James Barclay</copyright><lastBuildDate>Sun, 25 Oct 2020 12:39:11 -0400</lastBuildDate><atom:link href="https://everythingisgray.com/categories/technology/index.xml" rel="self" type="application/rss+xml"/><item><title>Clean Up Whitespace With find and sed</title><link>https://everythingisgray.com/2014/10/07/clean-up-whitespace-with-find-and-sed/</link><pubDate>Tue, 07 Oct 2014 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2014/10/07/clean-up-whitespace-with-find-and-sed/</guid><description>&lt;p>Unclean whitespace in source code makes me sad. The following will remove all trailing whitespace in files within the current directory that end with &lt;code>.h&lt;/code> or &lt;code>.m&lt;/code>, (which makes me happy). I&amp;rsquo;ve only tested this on OS X.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>find . -regex &lt;span style="color:#e6db74">&amp;#39;.*\.[mh]$&amp;#39;&lt;/span> -exec sed -i &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;s/[ \t]*$//&amp;#39;&lt;/span> &lt;span style="color:#f92672">{}&lt;/span> &lt;span style="color:#ae81ff">\;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>BUT WAIT!&lt;/em>&lt;/p>
&lt;p>Before you blindly paste this into your command prompt and hit return, (and complain to me that I made you remove all lines ending with &amp;rsquo;t&amp;rsquo;), the &lt;code>\t&lt;/code> should actually be a tab character. To replace &lt;code>\t&lt;/code> with a tab character, type &lt;code>Control&lt;/code> + &lt;code>v&lt;/code>, then hit tab. The command will now look like this, (which is a space, then a tab):&lt;/p></description></item><item><title>AutoPkgr - A Front End for AutoPkg</title><link>https://everythingisgray.com/2014/07/21/autopkgr-a-front-end-for-autopkg/</link><pubDate>Mon, 21 Jul 2014 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2014/07/21/autopkgr-a-front-end-for-autopkg/</guid><description>&lt;p>Recently, a &lt;a href="http://joshsenick.com">couple&lt;/a> &lt;a href="http://elliotjordan.com">coworkers&lt;/a> of mine and I released &lt;a href="https://github.com/lindegroup/autopkgr">AutoPkgr&lt;/a>, a GUI front end for &lt;a href="http://autopkg.github.io/autopkg">AutoPkg&lt;/a>. AutoPkg is an extremely powerful command-line tool that allows IT administrators to automate OS X software packaging and distribution. AutoPkgr extends this functionality by adding the following key features:&lt;/p>
&lt;ul>
&lt;li>Easy tracking of which specific AutoPkg recipes you care about.&lt;/li>
&lt;li>Automatic scheduled checks for new downloads that are available as part of the AutoPkg recipes you subscribe to.&lt;/li>
&lt;li>Email notifications when new items are downloaded.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://github.com/lindegroup/autopkgr">&lt;img src="https://everythingisgray.com/images/2014-07-21-autopkgr/autopkgr-welcome-screen.png" alt="AutoPkgr">&lt;/a>&lt;/p></description></item><item><title>Complex LDAP Queries With ldapsearch and python-ldap</title><link>https://everythingisgray.com/2014/06/01/complex-ldap-queries-with-ldapsearch-and-python-ldap/</link><pubDate>Sun, 01 Jun 2014 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2014/06/01/complex-ldap-queries-with-ldapsearch-and-python-ldap/</guid><description>&lt;p>I recently needed to test a complex LDAP query in a Python script I was writing. I realized shortly after beginning to construct the query that I had never done anything more than a simple &lt;code>a=b&lt;/code> or &lt;code>a=b*&lt;/code> before, (where &lt;code>*&lt;/code> is the wildcard). The solution is rather simple, albeit awkward due to the position of the binary operators. You&amp;rsquo;ll notice in the examples below that the operators are positioned &lt;em>before&lt;/em> each operand. So rather than &lt;code>a &amp;amp; b&lt;/code>, you would write &lt;code>&amp;amp;(a)(b)&lt;/code>.&lt;/p></description></item><item><title>Python One-liner for Determining Java Vendor</title><link>https://everythingisgray.com/2014/03/09/python-one-liner-for-determining-java-vendor/</link><pubDate>Sun, 09 Mar 2014 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2014/03/09/python-one-liner-for-determining-java-vendor/</guid><description>&lt;p>Here&amp;rsquo;s a Python one-liner that prints the Java vendor on OS X clients, (e.g., Apple or Oracle).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>python -c &lt;span style="color:#e6db74">&amp;#39;import os,plistlib; jv = plistlib.readPlist(os.path.join(os.path.realpath(&amp;#34;/Library/Internet Plug-Ins/JavaAppletPlugin.plugin&amp;#34;), &amp;#34;Contents/Info.plist&amp;#34;))[&amp;#34;CFBundleIdentifier&amp;#34;].split(&amp;#34;.&amp;#34;)[1]; print jv.capitalize()&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Why?&lt;/p>
&lt;p>&amp;hellip;Because we can.&lt;/p></description></item><item><title>Querying AD Group Membership Status With ldapsearch</title><link>https://everythingisgray.com/2014/01/02/querying-ad-group-membership-status-with-ldapsearch/</link><pubDate>Thu, 02 Jan 2014 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2014/01/02/querying-ad-group-membership-status-with-ldapsearch/</guid><description>&lt;p>Here&amp;rsquo;s a way to query Active Directory for group membership status with the &lt;code>ldapsearch&lt;/code> utility. In my case, this was used to check if a user is authorized before attempting to mount an SMB share at login on OS X clients. The &lt;code>-Q&lt;/code> option causes &lt;code>ldapsearch&lt;/code> to use &lt;a href="http://en.wikipedia.org/wiki/Simple_Authentication_and_Security_Layer">SASL&lt;/a> quiet mode and not prompt for a password, which works if a &lt;a href="http://web.mit.edu/~kerberos/">Kerberos&lt;/a> ticket is present.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console_user&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>/usr/bin/stat -f%Su /dev/console&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ldap_uri&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ldap://example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>search_base&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;DC=example,DC=com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>group&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Some Group&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>is_member_of_group&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>/usr/bin/ldapsearch -LLL -Q -H &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ldap_uri&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -b &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$search_base&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;sAMAccountName=&lt;/span>$console_user&lt;span style="color:#e6db74">&amp;#34;&lt;/span> sAMAccountName | $grep &lt;span style="color:#e6db74">&amp;#34;OU=&lt;/span>$group&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">`&lt;/span> &lt;span style="color:#75715e"># -Q prevents the authentication prompt, works if kerberos ticket exists&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${#&lt;/span>is_member_of_group&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -ne &lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$console_user&lt;span style="color:#e6db74"> is a member of &lt;/span>$group&lt;span style="color:#e6db74">.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Do something about it&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$console_user&lt;span style="color:#e6db74"> is NOT a member of &lt;/span>$group&lt;span style="color:#e6db74">.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Do something else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit $?
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Ghost in the Cloud: Deploying the JSS on Amazon EC2</title><link>https://everythingisgray.com/2013/11/17/ghost-in-the-cloud-deploying-the-jss-on-amazon-ec2/</link><pubDate>Sun, 17 Nov 2013 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2013/11/17/ghost-in-the-cloud-deploying-the-jss-on-amazon-ec2/</guid><description>&lt;p>The fine folks at &lt;a href="http://www.jamfsoftware.com/">JAMF Software&lt;/a> have posted a &lt;a href="http://www.jamfsoftware.com/latest/video-ghost-in-the-cloud">video&lt;/a> of the talk I gave at this year&amp;rsquo;s &lt;a href="http://www.jamfsoftware.com/jnuc">JNUC&lt;/a>. I had a great time in Minneapolis and hope to attend again next year.&lt;/p>
&lt;p>The slides for this talk are available on my &lt;a href="https://github.com/futureimperfect/slides">GitHub&lt;/a> if you want to follow along.&lt;/p>

 &lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/OGk28LVSRiE?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
 &lt;/div></description></item><item><title>Option (Left|Right) Arrow Navigation in iTerm2</title><link>https://everythingisgray.com/2013/11/03/option-left-right-arrow-navigation-in-iterm2/</link><pubDate>Sun, 03 Nov 2013 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2013/11/03/option-left-right-arrow-navigation-in-iterm2/</guid><description>&lt;p>Today I decided to switch to &lt;a href="http://www.iterm2.com/#/section/home">iTerm2&lt;/a> on OS X. Shortly after making this decision I was frustrated by not being able to &amp;ldquo;jump&amp;rdquo; between words with the option-arrow shortcut. Fortunately, the solution is rather simple — just modify the option-left/right arrow shortcuts in &lt;strong>Preferences &amp;gt; Profiles &amp;gt; Keys&lt;/strong>. The &amp;ldquo;Action&amp;rdquo; should be &amp;ldquo;Send Escape Sequence&amp;rdquo; + &lt;strong>b&lt;/strong> for jumping backwards and &lt;strong>f&lt;/strong> for jumping forward, (e.g., &lt;code>^[b&lt;/code>, and &lt;code>^[f&lt;/code>).&lt;/p>
&lt;p>I know I&amp;rsquo;ve tried iTerm in the past, and I&amp;rsquo;m pretty sure not being able to do this right away kept me from continuing to use the tool. After making this change everything has been swell, though.&lt;/p></description></item><item><title>Speaking at the 2013 JAMF Nation User Conference</title><link>https://everythingisgray.com/2013/09/10/speaking-at-the-2013-jamf-nation-user-conference/</link><pubDate>Tue, 10 Sep 2013 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2013/09/10/speaking-at-the-2013-jamf-nation-user-conference/</guid><description>&lt;p>I&amp;rsquo;m very pleased to announce that &lt;a href="http://www.jamfsoftware.com/events/jamf-nation-user-conference/2013/sessions#james-barclay">I&amp;rsquo;ll be speaking&lt;/a> at the &lt;a href="http://www.jamfsoftware.com/jnuc">2013 JAMF Nation User Conference&lt;/a> in Minneapolis, MN. I&amp;rsquo;ll be discussing my experience with &lt;a href="https://jamfnation.jamfsoftware.com/jnucEvent.html?eventId=21">hosting the JSS on Amazon Elastic Compute Cloud (EC2)&lt;/a>, along with any lessons learned during the process, (of which there are many).&lt;/p>
&lt;p>The three day conference is being held at the &lt;a href="http://www.guthrietheater.org/">Guthrie Theater&lt;/a> from October 15-17. Hope to see you there!&lt;/p></description></item><item><title>Guest Appearance on 5by5's Systematic</title><link>https://everythingisgray.com/2013/08/24/guest-appearance-on-5by5s-systematic/</link><pubDate>Sat, 24 Aug 2013 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2013/08/24/guest-appearance-on-5by5s-systematic/</guid><description>&lt;p>I recently had the pleasure of joining &lt;a href="http://brettterpstra.com">Brett Terpstra&lt;/a> on &lt;a href="http://5by5.tv/systematic">5by5&amp;rsquo;s Systematic&lt;/a> to talk about Macs, art, coding, and general geekery.&lt;/p>
&lt;p>You can find the show notes and download the episode at: &lt;a href="http://5by5.tv/systematic/58">5by5.tv/systematic/58&lt;/a>.&lt;/p>
&lt;p>Thanks for listening!&lt;/p>
&lt;p>&lt;a href="http://5by5.tv/systematic">&lt;img src="https://everythingisgray.com/images/2013-08-24-guest-appearance-on-5by5-s-systematic/systematiclogo.jpg" alt="Systematic">&lt;/a>&lt;/p></description></item><item><title>Determining Guest Login Status</title><link>https://everythingisgray.com/2013/08/10/determining-guest-login-status/</link><pubDate>Sat, 10 Aug 2013 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2013/08/10/determining-guest-login-status/</guid><description>&lt;p>The other day I was presented with the challenge of determining whether Guest login was enabled on 150+ Macs. Fortunately, my client was using the &lt;a href="http://www.jamfsoftware.com/software/casper-suite">Casper Suite&lt;/a>, so I was able to whip up an Extension Attribute rather quickly. Here&amp;rsquo;s what I came up with to get the status:&lt;/p>
&lt;script src="https://gist.github.com/6203175/095e34ac6a7818ebe4321649bae44a7a618c8faf.js">&lt;/script></description></item><item><title>Automatically Post Images to Tumblr with Automator</title><link>https://everythingisgray.com/2010/08/19/how-i-use-automator-to-post-images-to-tumblr/</link><pubDate>Thu, 19 Aug 2010 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2010/08/19/how-i-use-automator-to-post-images-to-tumblr/</guid><description>&lt;p>For the past few months I have been drawing every day on 2.5 x 3.5 inch pieces of Bristol board as part of my most recent &amp;lsquo;&lt;a href="http://koobtra.com/">kooBtrA&lt;/a>&amp;rsquo; project. kooBtrA = ArtBook in reverse, as I plan to self publish a full-color book containing all the images sometime after one year passes.&lt;/p>
&lt;p>As you might imagine, finding the time to draw every day can be challenging. Not to mention the fact that I&amp;rsquo;ve also been posting these images to my Tumbleog; which includes scanning, resizing, and logging into Tumblr to post the image along with a description and tag. This became mundane after the first few days of posting, so I decided to set time aside to automate this process, as doing so would surely save me time in the long run.&lt;/p></description></item><item><title>Restore MySQL Database From ibdata and .frm Files</title><link>https://everythingisgray.com/2010/07/21/restore-mysql-database-from-ibdata-and-frm-files/</link><pubDate>Wed, 21 Jul 2010 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2010/07/21/restore-mysql-database-from-ibdata-and-frm-files/</guid><description>&lt;p>Last week I was presented with a problem that involved restoring a MySQL database for a client using only the &lt;code>/data&lt;/code> folder from an original MySQL installation. The solution turned out to be rather simple, but that didn&amp;rsquo;t stop me from racking my brain for a few hours. Thus, I thought I&amp;rsquo;d share my experience in hopes of helping others that may run into this.&lt;/p>
&lt;p>&lt;em>NOTE&lt;/em> The MySQL database I was tasked with restoring was associated with a WordPress installation. My guess is that this is irrelevant, though.&lt;/p></description></item><item><title>Configure Archive Utility in Mac OS X</title><link>https://everythingisgray.com/2010/02/16/configure-archive-utility-in-mac-os-x/</link><pubDate>Tue, 16 Feb 2010 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2010/02/16/configure-archive-utility-in-mac-os-x/</guid><description>&lt;p>Having recently purchased a new MacBook Pro and electing to skip the option of running &lt;a href="http://en.wikipedia.org/wiki/Migration_Assistant_(Apple)">Migration Assistant&lt;/a> to transfer my data and settings, I noticed that a few applications were behaving differently. Over the years I&amp;rsquo;ve configured quite a few things on my Mac, and eventually I became accustomed to said customizations. One of the first things I noticed was that when I would unarchive a zip file, the compressed file would stay put. I remembered that a few years ago I learned of a cool way to configure Mac OS X&amp;rsquo;s built-in Archive Utility, (using a System Preference pane), so I immediately went digging. To do this, simply navigate to &lt;code>/System/Library/CoreServices&lt;/code>. From there right or control click on Archive Utility.app, and select &amp;ldquo;Show Package Contents.&amp;rdquo; A new window will open containing a folder named &lt;code>Contents&lt;/code>, within which you&amp;rsquo;ll find &lt;code>Resources&lt;/code>, and finally &lt;code>Archives.prefPane&lt;/code>. Opening this preference pane will result in System Preferences.app asking if you&amp;rsquo;d like to install for all users or for this user only. Voila! Now you can tell Archive Utility to delete the archive after expanding it.&lt;/p></description></item><item><title>Check if Your Mac Is 64 Bit</title><link>https://everythingisgray.com/2009/10/08/check-if-your-mac-is-64-bit/</link><pubDate>Thu, 08 Oct 2009 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2009/10/08/check-if-your-mac-is-64-bit/</guid><description>&lt;p>Here&amp;rsquo;s an easy way to determine whether or not your Mac is 64 bit capable. Open Terminal.app, which is located in /Applications/Utilities and type in:&lt;/p>
&lt;p>&lt;code>sysctl hw | grep 64bit&lt;/code>&lt;/p>
&lt;p>If your machine is 64 bit capable, the result will be&lt;/p>
&lt;p>&lt;code>hw.cpu64bit_capable: 1&lt;/code>&lt;/p>
&lt;p>If your machine is not 64 bit capable, the result will be&lt;/p>
&lt;p>&lt;code>hw.cpu64bit_capable: 0&lt;/code>&lt;/p>
&lt;p>Tip source: &lt;a href="http://osxdaily.com/2009/09/23/check-if-your-mac-is-64-bit-compatible-via-command-line/">OSXDaily.com&lt;/a>&lt;/p></description></item><item><title>Snow Stack 3D CSS</title><link>https://everythingisgray.com/2009/07/23/snow-stack-3d-css/</link><pubDate>Thu, 23 Jul 2009 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2009/07/23/snow-stack-3d-css/</guid><description>&lt;p>A gentleman by the name of Charles Ying of &lt;a href="http://www.satine.org/">Satine.org&lt;/a> has developed a new 3D CSS visual effects demonstration called &lt;a href="http://www.satine.org/archives/2009/07/11/snow-stack-is-here/">Snow Stack&lt;/a>, which runs entirely on JavaScript, native WebKit CSS extensions, and XHTML/HTML. If you&amp;rsquo;re familiar with Cover Flow/Core Animation on the Mac you&amp;rsquo;ll immediately recognize Snow Stack. In order to run the demo you&amp;rsquo;ll need either the &lt;em>Snow Leopard Beta + Safari&lt;/em> &lt;strong>or&lt;/strong> &lt;em>Leopard + the latest nightly build of WebKit&lt;/em>. Either way, it&amp;rsquo;s quite fascinating to think that this is all being done in the browser.&lt;/p></description></item><item><title>I Shed a Tear for Quicksilver Today</title><link>https://everythingisgray.com/2009/04/22/i-shed-a-tear-for-quicksilver-today/</link><pubDate>Wed, 22 Apr 2009 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2009/04/22/i-shed-a-tear-for-quicksilver-today/</guid><description>&lt;p>Today I uninstalled &lt;a href="http://www.blacktree.com/">Quicksilver&lt;/a>, in favor of using the &lt;a href="http://www.obdev.at/products/launchbar/beta.html">LaunchBar 5 beta&lt;/a>. It was late 2007 when developer Nicholas Jitkoff released the &lt;a href="http://code.google.com/p/blacktree-alchemy/">source&lt;/a> to Google Code, and I&amp;rsquo;ve been hanging on tightly ever since. I understand that the project will continue to be updated, but I&amp;rsquo;ve come to my wits end, and am done struggling with the application for now. We&amp;rsquo;ll see how long this lasts&amp;hellip;&lt;/p></description></item><item><title>Windows 7 Beta + VMware Fusion 2</title><link>https://everythingisgray.com/2009/02/08/windows-7-beta--vmware-fusion-2/</link><pubDate>Sun, 08 Feb 2009 00:00:00 +0000</pubDate><guid>https://everythingisgray.com/2009/02/08/windows-7-beta--vmware-fusion-2/</guid><description>&lt;p>So I decided to take advantage of the opportunity to download Windows 7 while I still could, (the beta closes on February 10th), and I&amp;rsquo;ve been quite impressed thus far. The installation process was a breeze, and I was up and running in less than a half hour. The performance is rather snappy considering I&amp;rsquo;m running it in a VM on a 1.83 GHz MacBook Pro with 2GB of RAM, (of which 30GB of disk space and 768MB of RAM is allocated for its use). As for the setup in VMware Fusion, the only unusual step I had to take was to create a custom VM. The operating system that I chose during this process was Windows&amp;gt;Windows Server 2008, (there is currently no Windows 7 template).&lt;/p></description></item></channel></rss>